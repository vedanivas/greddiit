var g=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var E=Object.prototype.hasOwnProperty;var M=e=>g(e,"__esModule",{value:!0});var R=(e,t)=>{for(var n in t)g(e,n,{get:t[n],enumerable:!0})},T=(e,t,n,f)=>{if(t&&typeof t=="object"||typeof t=="function")for(let h of C(t))!E.call(e,h)&&(n||h!=="default")&&g(e,h,{get:()=>t[h],enumerable:!(f=j(t,h))||f.enumerable});return e};var A=(e=>(t,n)=>e&&e.get(t)||(n=T(M({}),t,1),e&&e.set(t,n),n))(typeof WeakMap!="undefined"?new WeakMap:0);var k={};R(k,{MongooseFindByReference:()=>N});var O={schemaTypeError:{"zh-CN":'\u53C2\u6570 "schema" \u7684\u7C7B\u578B\u5F97\u662F "Schema"\u3002',"en-US":'param "schema" type must be "Schema".'},modelCountError:{"zh-CN":"\u94A9\u5B50\u51FD\u6570\u8BBF\u95EE\u5230\u7684 Model \u6570\u91CF\u4E3A 0 \u6216\u8005\u4E0D\u5B58\u5728\u3002","en-US":"The number of models accessed is 0 or does not exist."}};function S(e){var t;if(e in O){let n=O[e];return((t=process.env.LANG)!=null?t:"").match("CN")?n["zh-CN"]:n["en-US"]}}function N(e){if(e.constructor.name!=="Schema")throw new Error(S("schemaTypeError"));e.pre(["find","findOne"],async function(t){let n=this.model.db.models;if(Object.keys(n!=null?n:{}).length===0)throw new Error(S("modelCountError"));let f=this.model.schema;function h(s){var a;let c="";if((s==null?void 0:s.instance)==="ObjectID"){let i=s.options;((a=i==null?void 0:i.ref)==null?void 0:a.length)&&(c=i.ref)}else if(s==null?void 0:s.$embeddedSchemaType)return h(s.$embeddedSchemaType);return n[c]}function w(s,c=f){var i;let a=[];for(;s.length>0;){let u=(i=s.shift())!=null?i:"";if(c.path([...a,u].join(".")))a.push(u);else{let r=h(c.path(a.join(".")));return r?[a.join("."),...w([u,...s],r.schema)]:[u]}}return a}async function d(s,c,a=f){if(typeof c!="object"||c===null||Object.keys(c).length===0)return c;let i={},u=a.path(s.join("."));for(let[r,o]of Object.entries(c)){if(!f.path(r)){let l=[...w(r.split(".")),o].reduceRight((m,p)=>p==="$"?m:{[p]:m});[[r,o]]=Object.entries(l)}let y=r.startsWith("$")?r==="$"?s:[]:[...s,r],$=y.join("."),b=a.path($);if(!r.startsWith("$")&&b===void 0){let l=h(u);if(l){let m=await d([],o,l.schema);if(m)return{$in:(await l.find({[r]:m},"_id")).map(P=>P._id)}}}Array.isArray(o)?Object.assign(i,{[r]:await Promise.all(o.map(async l=>await d(y,l,a)))}):typeof o=="object"&&o!==null&&Object.keys(o).length>0?Object.assign(i,{[r]:Object.fromEntries(await Promise.all(Object.entries(o).map(async([l,m])=>Object.entries(await d(y,{[l]:m},a))[0])))}):i[r]=o}return i}this._conditions=await d([],this._conditions),t()})}module.exports=A(k);0&&(module.exports={MongooseFindByReference});
//# sourceMappingURL=main.js.map